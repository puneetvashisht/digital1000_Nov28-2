Email: PuneetVashisht@gmail.com
Github: https://github.com/puneetvashisht/digital1000_Nov28-2
Drive: https://drive.google.com/drive/folders/0ByYjtCTdrTECS1JQQUdyRTdQM0k?usp=sharing

chrome extension
	ySlow

Download:
	Brackets:
		brackets.io
	Node:
		https://nodejs.org/en/
	MongoDb:
		https://www.mongodb.com/download-center?jmp=docs
		for 32bit
			https://www.mongodb.org/dl/win32/i386

1. JavaScript
	Browser - Chrome
		You can write js in chrome
	IDE - Brackets
	Basic js
		variables
		functions
		DOM 
			table
		Clock
		validation
		Events
			onclick = "func()"
			onmouseenter
			onmouseleave
			focus
			blur
			dblclick
			scroll
			resize
			load
			unload
	callback
2.	jquery
		basic - syntax
		selectors/events
			mouseenter, mouseleave, bind
		nestedSelectors
		dynamic elements
		animation
		validation
		ajax
	
	
	Application
		1. Show item table on the page. Item data is coming from the server/json.
		2. odd number of rows should have light green(darkseagreen) background
		3. even number of rows should have background as cornflowerblue
		4. On the same page, user can fill new item in the form and add to table.
		5. Only valid data should be appended to table row.
		6. Upload it to shared link before 5 PM
	
3. AngularJS
	Syntax : Jquery vs Angular
	Expression
	
	one rootScope per module/app
	one scope per controller
	n number of controllers can be in a module
	
	Try it: 
		write a module
			controller('parent'): scope.fn
			controller('child'): ln

		ng-app
			ng-controller="parent"	
				{{fn + ln}}
				ng-controller="child"	
					{{fn + ln}}
	
	Service/Factory
	Filter
	
	Directive
		ng-repeat
		ng-click

		ng-disabled
		ng-readonly
		ng-checked
		ng-selected
		ng-show | ng-hide | ng-if
		
		custom directive
			element
			attribute
			class
			
	Bootstrap
	More dynamic diractive
	Validation
	Ajax
	Routing
	
5. NodeJs
		js running on server side
		node =>to run server side js
			include third party modules
				npm install module_name
							express
			package.json === pom.xml
				npm init
				npm install module_name --save
				npm install --save module_name
				
				
		1. express server required
		2. server.listen port and host
		3. server to handle req with method
		4. dir('WebContent') for client code
		
		
		mongobd
			no-sql database
			
			create dir => data
			command : mongod --dbpath dir_name
			connection : mongo
				npSql for more commands to
					insert
					delete
					update
					sort
					find
					
			connection with express server
			
			
			
Project Recap:
	1. npm init (package.json)
	2. npm install --save module1 module2 ....
	3. if you have previous package.json
		npm install
	4. index.js
		express
			app.use(express.static(__dirname+"/public"))
			app.listen(port, ip, function(){
			
				5. MongoClient.connect("mongodb://localhost:27017/dbname", function(err, db){
				
					app.get('/list', function(req, res){
						db.collection("colName").find()toArray(function(err, data){
						res.send(result: data)
						})
					})
				})
			})
		
		
		
		
		
		
